# docker-compose.yml
# This file defines how your application's services should be run together using Docker Compose.
# For now, it will define a single service for your AH Recommendation LLM application.

version: '3.8' # Specify the Docker Compose file format version

services:
  ah_reco_llm_app:
    build:
      context: . # Build the image from the current directory (where Dockerfile is located)
      dockerfile: Dockerfile
    container_name: ah_reco_llm_container
    # Define environment variables for the container
    # IMPORTANT: Do NOT hardcode secrets here. Use environment variables that are loaded
    # from a .env file (recommended for local development) or passed directly.
    environment:
      # Example environment variables (will be loaded from .env if present)
      # These names must match what your Python script (main.py, send_email.py) expects via os.environ.get()
      SENDPULSE_API_ID: ${SENDPULSE_API_ID}
      SENDPULSE_API_SECRET: ${SENDPULSE_API_SECRET}
      EMAIL_SENDER_EMAIL: ${EMAIL_SENDER_EMAIL}
      EMAIL_RECEIVER_EMAIL: ${EMAIL_RECEIVER_EMAIL}
      EMAIL_SUBJECT: "Your Daily AH Recommendations" # Can override subject here if needed
      HTML_FILE_PATH: generated_email.html # Path within the container
      # LLM and other config variables
      GITHUB_LLM_API_ENDPOINT: ${GITHUB_LLM_API_ENDPOINT}
      GITHUB_LLM_MODEL_NAME: ${GITHUB_LLM_MODEL_NAME}
      
    # Mount volumes if your application needs to read/write persistent data or access local files
    # For example, if 'data/input.json' needs to be available in the container:
    volumes:
      - ./data:/app/data # Mount your local data folder into the container
      - ./output:/app/output # Mount your local output folder to persist generated HTML

    # Specify a restart policy (e.g., restart if it stops)
    restart: "no" # For a scheduled job, 'no' is appropriate. 'on-failure' or 'always' for services.

    # Optional: If your app listens on a port (e.g., a simple web UI for checking status)
    # ports:
    #   - "8000:8000" # Host_port:Container_port

    # Commands to run before the main command (CMD in Dockerfile)
    # entrypoint: ["/bin/bash", "-c"]
    # command: "python3 main.py" # Can override CMD from Dockerfile here
